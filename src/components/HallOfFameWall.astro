---
interface Props {
  members: Array<{
    nickname: string;
    link: string;
    role: string;
    bio: string;
    tag: string;
    img: string;
  }>;
}

const { members } = Astro.props;
---

<div
  class="flex justify-center items-center relative p-4 sm:p-8 md:p-12 rounded-2xl"
>
  <!-- Wall Background with Texture -->
  <div class="wall-background">
    <div class="wall-texture"></div>

    <!-- Gold Border Frame for the entire wall -->
    <div class="wall-frame">
      <div class="wall-title">
        <h2 class="hall-of-fame-title">HALL OF FAME</h2>
        <div class="title-underline"></div>
      </div>

      <!-- Gallery of Gold-Framed Portraits -->
      <div class="portraits-gallery">
        {
          members.map((person) => (
              <div class="portrait-frame">
              <div class="frame-border">
                <div class="frame-inner">
                  <a
                    href={`/hall-of-fame/${person.link}`}
                    class="portrait-link"
                    aria-label={`Profil von ${person.nickname} â€“ ${person.role}`}
                  >
                    <div class="portrait-container">
                      <img
                        src={person.img}
                        alt={person.nickname}
                        class="portrait-image"
                        loading="lazy"
                      />
                      <div class="portrait-overlay">
                        <div class="overlay-background" />
                        <div class="portrait-info">
                          <h3 class="portrait-name">{person.nickname}</h3>
                          <p class="portrait-role">{person.role}</p>
                          <div class="portrait-tag">{person.tag}</div>
                        </div>
                      </div>
                    </div>
                  </a>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</div>

<style>
  .wall-texture {
    position: absolute;
    inset: 0;
    background-image:
      radial-gradient(circle at 20% 30%, rgba(159, 254, 136, 0.06) 0%, transparent 50%),
      radial-gradient(circle at 80% 70%, rgba(159, 254, 136, 0.04) 0%, transparent 50%);
    border-radius: 16px;
    pointer-events: none;
  }

  .wall-background { width: 100%; }
  .wall-frame { position: relative; z-index: 1; width: 100%; }
  .wall-title { text-align: center; margin-bottom: 2rem; }

  .hall-of-fame-title {
    font-size: clamp(2rem, 6vw, 3rem);
    font-weight: 900;
    letter-spacing: 0.15em;
    color: #ededed;
  }

  .title-underline {
    width: 160px;
    height: 2px;
    background: linear-gradient(90deg, transparent 0%, #9FFE88 50%, transparent 100%);
    margin: 0.75rem auto 0;
    border-radius: 2px;
  }

  .portraits-gallery {
    display: grid;
    width: 100%;
    grid-template-columns: repeat(auto-fit, minmax(clamp(96px, 28vw, 160px), 1fr));
    gap: 0.75rem;
    max-width: none;
    margin: 0 auto;
    justify-content: center;
    align-items: stretch;
    align-content: start;
    grid-auto-flow: row;
  }

  @media (min-width: 640px) {
    .portraits-gallery {
      grid-template-columns: repeat(auto-fit, minmax(clamp(110px, 22vw, 180px), 1fr));
      gap: 1rem;
    }
  }

  @media (min-width: 1024px) {
    .portraits-gallery {
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      max-width: 1200px;
    }
  }

  .frame-border {
    position: relative;
    padding: 6px;
    border-radius: 12px;
    background: linear-gradient(135deg, rgba(159, 254, 136, 0.4), rgba(159, 254, 136, 0.15));
  }

  .frame-inner {
    background: #1a1a1a;
    border-radius: 10px;
    overflow: hidden;
    position: relative;
    border: 1px solid rgba(255, 255, 255, 0.06);
  }

  .portrait-frame { min-width: 0; }
  .portrait-link { display: block; text-decoration: none; color: inherit; cursor: pointer; -webkit-tap-highlight-color: transparent; touch-action: manipulation; }

  .portrait-container { position: relative; aspect-ratio: 1; overflow: hidden; }

  .portrait-image {
    width: 100%; height: 100%; object-fit: cover; transition: transform 0.2s ease-out;
  }

  .overlay-background {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      135deg,
      rgba(75, 105, 68, 0.9) 0%,
      rgba(75, 105, 68, 0.85) 50%,
      rgba(75, 105, 68, 0.9) 100%
    );
    backdrop-filter: blur(2px);
  }


  .portrait-overlay {
    position: absolute; inset: 0; display: flex; align-items: center; justify-content: center;
    opacity: 0; transition: opacity 0.2s ease-out;
    background: linear-gradient(135deg, rgba(0,0,0,0.0), rgba(0,0,0,0.35));
    pointer-events: none;
  }

  /* Hover effects only on devices that support hover (prevents double-tap trap) */
  @media (hover: hover) and (pointer: fine) {
    .portrait-frame:hover .portrait-overlay { opacity: 1; }
    .portrait-frame:hover .portrait-image { transform: scale(1.03); }
  }

  /* Tap feedback */
  .portrait-link:active .portrait-image { transform: scale(1.02); }

  .portrait-info { position: relative; z-index: 2; text-align: center; padding: 0.75rem; width: 100%; }
  .portrait-name { font-size: clamp(1rem, 3.5vw, 1.25rem); font-weight: 700; color: #ededed; margin-bottom: 0.35rem; line-height: 1.2; }
  .portrait-role { font-size: clamp(0.75rem, 3vw, 0.875rem); color: #cfcfcf; margin-bottom: 0.5rem; opacity: 0.9; line-height: 1.3; }
  .portrait-tag {
    display: inline-block; background: #0f0f0f; color: #9FFE88; padding: 0.2rem 0.6rem; border-radius: 16px;
    font-size: clamp(0.6rem, 2.4vw, 0.7rem); font-weight: 600; text-transform: uppercase; letter-spacing: 0.05em;
    border: 1px solid rgba(159, 254, 136, 0.3);
  }

  /* Subtle entrance */
  .portrait-frame { opacity: 0; transform: translateY(12px); animation: frameIn 0.25s ease-out forwards; }
  .portrait-frame:nth-child(1){ animation-delay: 0.03s; }
  .portrait-frame:nth-child(2){ animation-delay: 0.06s; }
  .portrait-frame:nth-child(3){ animation-delay: 0.09s; }
  .portrait-frame:nth-child(4){ animation-delay: 0.12s; }
  .portrait-frame:nth-child(5){ animation-delay: 0.15s; }

  @keyframes frameIn { to { opacity: 1; transform: translateY(0); } }

  @media (prefers-reduced-motion: reduce) {
    .portrait-frame, .portrait-image, .portrait-overlay { animation: none; transition: none; }
    .portrait-frame { opacity: 1; transform: none; }
  }
</style>
